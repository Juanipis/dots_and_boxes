name: Flutter CI

on:
  push:
    branches:
      - master

jobs:
  create-tag-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
            git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --global user.name "GitHub Actions"

      - name: Get the latest tag
        id: get_tag
        run: |
          # Obtén el último tag
          git fetch --tags
          latest_tag=$(git tag --sort=-v:refname | head -n 1)
          echo "Latest tag: $latest_tag"
          # Incrementa el número de versión
          if [ -z "$latest_tag" ]; then
            new_tag="v1.0.0"
          else
            new_tag=$(echo $latest_tag | awk -F. '{print $1 "." $2 "." $3+1}')
          fi
          echo "New tag: $new_tag"
          echo "tag_name=$new_tag" >> $GITHUB_ENV

      - name: Create a new tag
        run: |
          git tag ${{ env.tag_name }}
          git push origin ${{ env.tag_name }}

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.22.2'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libunwind-dev clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio

      - name: Install project dependencies
        run: flutter pub get

      - name: Enable linux build
        run: flutter config --enable-linux-desktop

      - name: Build artifacts
        run: flutter build linux --release

      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: DotsAndBoxes-${{ env.tag_name }}-linux.zip
          directory: build/linux/x64/release/bundle

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tag_name }}
          name: "Release ${{ env.tag_name }}"
          files: build/linux/x64/release/bundle/DotsAndBoxes-${{ env.tag_name }}-linux.zip
